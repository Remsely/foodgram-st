name: CI/CD Kittygram

on:
  push:
    branches:
      - main

jobs:
  backend_tests:
    name: Backend tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U django_user" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff django psycopg2-binary
          pip install -r backend/requirements.txt

      - name: Lint backend with ruff
        run: |
          ruff check backend/

  build_and_push:
    name: Build and publish images
    runs-on: ubuntu-latest
    needs:
      - backend_tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/fooodgram_backend:latest

      - name: Build & Push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/fooodgram_frontend:latest

      - name: Build & Push gateway image
        uses: docker/build-push-action@v4
        with:
          context: ./infra
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/fooodgram_gateway:latest

  notify:
    name: Telegram notify
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üöÄ CI/CD –¥–ª—è Kittygram —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω! –û–±—Ä–∞–∑—ã –∑–∞–¥–µ–ø–ª–æ–µ–Ω—ã: fooodgram_backend, fooodgram_frontend, fooodgram_gateway.
